import{d as e,e as t,f as s,t as d,w as g,x as u}from"./chunk-MGBRLVRV.js";import{a as i,b as o}from"./chunk-LLXA3JIY.js";var l=t({source:"CARRIAGE",events:{loadAllCarriage:s(),loadAllCarriageSuccess:e(),loadAllCarriageFailure:e(),createNewCarriage:e(),createNewCarriageSuccess:e(),createNewCarriageFailure:e(),addNewCarriageToStore:e(),updateCarriage:e(),updateCarriageSuccess:e(),updateCarriageFailure:e(),updateCarriageInStore:e()}});var n={carriage:[],isLoading:!1,error:null};var F=d({name:"carriage",reducer:u(n,g(l.loadAllCarriage,r=>o(i({},r),{isLoading:!0})),g(l.loadAllCarriageSuccess,(r,{carriage:a})=>o(i({},r),{carriage:[...a],isLoading:!1})),g(l.loadAllCarriageFailure,(r,{error:a})=>o(i({},r),{error:a.message,isLoading:!1})),g(l.addNewCarriageToStore,(r,{newCarriage:a})=>o(i({},r),{carriage:[a,...r.carriage],error:null})),g(l.createNewCarriageFailure,(r,{error:a})=>o(i({},r),{error:a.message,isLoading:!1})),g(l.updateCarriageInStore,(r,{updateCarriage:a})=>o(i({},r),{carriage:r.carriage.map(c=>c.code===a.code?i(i({},c),a):c),error:null})),g(l.updateCarriageFailure,(r,{error:a})=>o(i({},r),{error:a.message,isLoading:!1})))});export{l as a,F as b};
